CREATE TABLE IF NOT EXISTS amigos (
  uuid VARCHAR(36) PRIMARY KEY,
  email VARCHAR(50) UNIQUE NOT NULL,
  name VARCHAR(50) NOT NULL,
  created_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updated_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  is_deleted BOOLEAN DEFAULT FALSE NOT NULL
);

CREATE TABLE IF NOT EXISTS passwords (
  amigo_uuid VARCHAR(36) UNIQUE NOT NULL,
  hash VARCHAR(100) NOT NULL,
  created_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updated_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  is_deleted BOOLEAN DEFAULT FALSE NOT NULL,
  CONSTRAINT fk_amigo_uuid FOREIGN KEY (amigo_uuid) REFERENCES amigos(uuid)
);

CREATE TABLE IF NOT EXISTS burros (
  uuid VARCHAR(36) PRIMARY KEY,
  created_by VARCHAR(36) NOT NULL,
  name VARCHAR(50) NOT NULL,
  description VARCHAR(255),
  created_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updated_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  is_deleted BOOLEAN DEFAULT FALSE NOT NULL,
  CONSTRAINT fk_amigo_uuid FOREIGN KEY (created_by) REFERENCES amigos(uuid)
);

CREATE TABLE IF NOT EXISTS churros (
  uuid VARCHAR(36) PRIMARY KEY,
  burro_uuid VARCHAR(36) NOT NULL,
  created_by VARCHAR(36) NOT NULL,
  name VARCHAR(50) NOT NULL,
  description VARCHAR(255),
  reward VARCHAR(255),
  created_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updated_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  is_deleted BOOLEAN DEFAULT FALSE NOT NULL,
  CONSTRAINT fk_burro_uuid FOREIGN KEY (burro_uuid) REFERENCES burros(uuid),
  CONSTRAINT fk_amigo_uuid FOREIGN KEY (created_by) REFERENCES amigos(uuid)
);

CREATE TABLE IF NOT EXISTS amigos__burros (
  amigo_uuid VARCHAR(36) NOT NULL,
  burro_uuid VARCHAR(36) NOT NULL,
  created_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updated_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  is_deleted BOOLEAN DEFAULT FALSE NOT NULL,
  CONSTRAINT fk_amigo_uuid FOREIGN KEY (amigo_uuid) REFERENCES amigos(uuid),
  CONSTRAINT fk_burro_uuid FOREIGN KEY (burro_uuid) REFERENCES burros(uuid)
);

CREATE TABLE IF NOT EXISTS amigos__churros (
  amigo_uuid VARCHAR(36) NOT NULL,
  churro_uuid VARCHAR(36) NOT NULL,
  completed_on TIMESTAMP,
  created_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  updated_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  is_deleted BOOLEAN DEFAULT FALSE NOT NULL,
  CONSTRAINT fk_amigo_uuid FOREIGN KEY (amigo_uuid) REFERENCES amigos(uuid),
  CONSTRAINT fk_churro_uuid FOREIGN KEY (churro_uuid) REFERENCES churros(uuid)
);
